const logger = require('../logger');
const balance = require('./balance');
const blockInfo = require('./blockInfo');
const chainInfo = require('./chainInfo');
const councilInfo = require('./councilInfo');
const democracyInfo = require('./democracyInfo');
const electionsInfo = require('./electionsInfo');
const intentionCount = require('./intentionCount');
const intentions = require('./intentions');
const latestBlock = require('./latestBlock');
const proposals = require('./proposals');
const proposalInfo = require('./proposalInfo');
const runtimeConstants = require('./runtimeConstants');
const stakingInfo = require('./stakingInfo');
const sudoKey = require('./sudoKey');
const techComm = require('./techComm');
const techCommProposals = require('./techCommProposals');
const techCommProposalInfo = require('./techCommProposalInfo');
const validatorCount = require('./validatorCount');
const validators = require('./validators');

module.exports = async app => {
  app.command('balance', balance());
  app.command('blockinfo', blockInfo());
  app.command('blockInfo', blockInfo());
  app.command('chaininfo', chainInfo());
  app.command('chainInfo', chainInfo());
  app.command('councilinfo', councilInfo());
  app.command('councilInfo', councilInfo());
  app.command('democracyinfo', democracyInfo());
  app.command('democracyInfo', democracyInfo());
  app.command('electionsinfo', electionsInfo());
  app.command('electionsInfo', electionsInfo());
  app.command('intentioncount', intentionCount());
  app.command('intentionCount', intentionCount());
  app.command('intentions', intentions());
  app.command('latestblock', latestBlock());
  app.command('latestBlock', latestBlock());
  app.command('proposals', proposals());
  app.command('proposalinfo', proposalInfo());
  app.command('proposalInfo', proposalInfo());
  app.command('runtimeconstants', runtimeConstants());
  app.command('runtimeConstants', runtimeConstants());
  app.command('stakinginfo', stakingInfo());
  app.command('stakingInfo', stakingInfo());
  app.command('sudokey', sudoKey());
  app.command('sudoKey', sudoKey());
  app.command('techcomm', techComm());
  app.command('techComm', techComm());
  app.command('techcommproposals', techCommProposals());
  app.command('techCommProposals', techCommProposals());
  app.command('techcommproposalInfo', techCommProposalInfo());
  app.command('techCommProposalInfo', techCommProposalInfo());
  app.command('validatorcount', validatorCount());
  app.command('validatorCount', validatorCount());
  app.command('validators', validators());

  logger.info('Initialized commands');
};
